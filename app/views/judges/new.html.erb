<!DOCTYPE html>
<html>
  <body>
    <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->

    <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '360',
          width: '640',
          videoId: 'SVSf8fNp_kg',
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          setTimeout(stopVideo, 8000);
          done = true;
        }
      }
      function stopVideo() {
        player.stopVideo();
      }
    </script>

<div class="videos">
    <% if @post.video.attached? %>
      <%= video_tag rails_blob_path(@post.video) ,size: "640x360" , loop: true, autoplay: true, muted: true ,class: "post-video"%>
        <%# <video width="480" height="270" src="<%= rails_blob_path(@post.video)" type="video/mp4" controls></video> %> %>
    <%elsif @post.gif_url%>
      <%= image_tag "#{@post.gif_url}/raw" ,class: "post-video" %>
    <%else%>
      <div id="player"></div>
    <% end %>
</div>

    <% if user_signed_in? && current_user.id == @post.user.id  %>
      <%= link_to '編集', edit_post_path(params[:post_id]), method: :get, class: "skill-edit-btn" %>
      <%= link_to '削除', post_path(params[:post_id]), method: :delete, class:'skill-destroy-btn' %>
    <% end %>

    <%# <% if user_signed_in? && current_user.id != @post.user.id && Judge.find_by(post_id: params[:id]).present? && current_user.id != Judge.find_by(post_id: params[:id]).user_id%> %>
      <%= form_with(model: [@post, @judge] , local: true) do |f| %>
        <div class="post-explain-box">
          <span><%= @post.description %></span>
        </div>
        <div class="field">
          <%= f.label :judge_correct_id %><br />
          <%= f.collection_select(:judge_correct_id, JudgeCorrect.all, :id, :name, {}, {class:"judge-correct-select"}) %>
        </div>
        <div>
          <%= f.submit "正解を見る" %>
        </div>
      <%# <% end %> %>
    <%# <%elsif @post.blank? && @judge.blank? && @judge.judge_correct_id != 1%> %>
    <%# <%else%> %>
      <%# <%"答えは#{@post.judge_correct.name}"%> %>
      <%# <% "#{@judge.judge_correct.name}と回答済み"あとで条件分岐を作成%> %>
    <% end %>
  </body>
  </html>