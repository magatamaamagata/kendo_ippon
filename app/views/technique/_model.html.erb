<!DOCTYPE html>
<html>
  <body>
    <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
    <div id="player"></div>
    <div id="get_video_id" skill_id=<%= @skill.youtube.url_id %> >
    <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        const video = document.getElementById("get_video_id");
        const skillId = video.getAttribute("skill_id");
        player = new YT.Player('player', {
          height: '360',
          width: '640',
          videoId: `${skillId}`,
          autoplay: 1,
          startSeconds: 0,
          // endSeconds: 5,
          // loop: 1,
          controls: 0,
          showinfo: 0,
          events: {
            'onReady': onPlayerReady,
            // 'onStateChange': onPlayerStateChange,
            // 'setLoop': setLoop

          }
        });
        // console.log(player);
        
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
        setInterval(function(){
          event.target.seekTo(0);
        },8000);
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      // var done = false;
      // function onPlayerStateChange(event) {
      //   if (event.data == YT.PlayerState.PLAYING && !done) {
      //     setTimeout(stopVideo, 7000);
      //     done = true;
      //   }
      //   // console.log()
      // }
      // function setLoop() {
      //     player.setLoop(true);
      // }
    window.addEventListener("load", hide);    </script>
  </body>
</html>