<!DOCTYPE html>
<html>
  <div id="get_video_id" skill_id=<%= @skill.youtube.url_id %>></div>
  <div id="get_video_start" start_time=<%= @skill.youtube.start %>></div>
  <div class="videos">
    <div class="block-video"> 
      <% if @skill.video.attached? %>
        <p><%=@skill.user.nickname%>さん</p>
        <%= video_tag rails_blob_path(@skill.video) , loop: true, autoplay: true, muted: true ,class: "post-video"%>
      <%end %>
    </div>
    <div class="model-videos">
      <p>お手本</p>
      <div id="player" class="model-video"></div>
    </div>
  </div>

<script>
      //IFrame Player APIを非同期的にロードする
      const tag = document.createElement('script');
      tag.src = "https://www.youtube.com/iframe_api";
      const firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. APIコードを読み込んだ後にyoutubeの枠を作りビデオを再生する準備をする
      let player;
      function onYouTubeIframeAPIReady() {
        const video = document.getElementById("get_video_id");
        const skillId = video.getAttribute("skill_id");
        const startTime = document.getElementById("get_video_start");
        const start = startTime.getAttribute("start_time");
        player = new YT.Player('player', {
          startSeconds: start,
          videoId:  skillId,
          events: {
            //ビデオ再生する準備ができたら起動する関数
            'onReady': onPlayerReady,
          }
        });
      }

      // 再生する。7秒ごとにループする
      function onPlayerReady(event) {
        event.target.playVideo();
        setInterval(function(){
        //7000 msごとにseekToでstartの位置に戻る
        const startTime = document.getElementById("get_video_start");
        const start = startTime.getAttribute("start_time");
        event.target.seekTo(start);
        },7000);
      }

</script>
</html>